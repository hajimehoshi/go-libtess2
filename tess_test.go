package libtess2_test

import (
	"fmt"

	. "github.com/hajimehoshi/go-libtess2"
)

func ExampleTriangles() {
	contour := []Vertex{
		{X: 0.0, Y: 3.0},
		{X: -1.0, Y: 0.0},
		{X: 1.6, Y: 1.9},
		{X: -1.6, Y: 1.9},
		{X: 1.0, Y: 0.0},
	}
	t := NewTesselator()
	t.AddContour(contour)
	e, v, err := t.Tesselate()
	if err != nil {
		panic(err)
	}
	for i := 0; i < len(e)/3; i++ {
		fmt.Printf("(%.1f, %.1f), (%.1f, %.1f), (%.1f, %.1f)\n",
			v[e[3*i]].X, v[e[3*i]].Y,
			v[e[3*i+1]].X, v[e[3*i+1]].Y,
			v[e[3*i+2]].X, v[e[3*i+2]].Y)
	}
	// Output:
	// (0.4, 1.9), (0.0, 3.0), (-0.4, 1.9)
	// (1.6, 1.9), (0.4, 1.9), (0.6, 1.2)
	// (1.0, 0.0), (0.6, 1.2), (-0.0, 0.7)
	// (-0.0, 0.7), (-0.6, 1.2), (-1.0, 0.0)
	// (-0.4, 1.9), (-1.6, 1.9), (-0.6, 1.2)
}

func ExampleFg() {
	t := NewTesselator()
	t.AddContour([]Vertex{
		{X: 57.25, Y: 0},
		{X: 74.941, Y: 35.848},
		{X: 114.5, Y: 41.595},
		{X: 85.875, Y: 69.498},
		{X: 92.633, Y: 108.897},
		{X: 57.25, Y: 90.296},
		{X: 21.868, Y: 108.897},
		{X: 28.625, Y: 69.498},
		{X: 0, Y: 41.595},
		{X: 39.559, Y: 35.848},
	})
	e, v, err := t.Tesselate()
	if err != nil {
		panic(err)
	}
	for i := 0; i < len(e)/3; i++ {
		fmt.Printf("(%.1f, %.1f), (%.1f, %.1f), (%.1f, %.1f)\n",
			v[e[3*i]].X, v[e[3*i]].Y,
			v[e[3*i+1]].X, v[e[3*i+1]].Y,
			v[e[3*i+2]].X, v[e[3*i+2]].Y)
	}

	// Output:
	// (92.6, 108.9), (74.9, 35.8), (85.9, 69.5)
	// (57.2, 90.3), (74.9, 35.8), (92.6, 108.9)
	// (57.2, 90.3), (57.2, 0.0), (74.9, 35.8)
	// (57.2, 90.3), (39.6, 35.8), (57.2, 0.0)
	// (57.2, 90.3), (28.6, 69.5), (39.6, 35.8)
	// (28.6, 69.5), (57.2, 90.3), (21.9, 108.9)
	// (114.5, 41.6), (85.9, 69.5), (74.9, 35.8)
	// (39.6, 35.8), (28.6, 69.5), (0.0, 41.6)
}
